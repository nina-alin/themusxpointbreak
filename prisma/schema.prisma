// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output = "../../node_modules/.prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                       String    @id @default(cuid())
  username                 String?   @unique
  name                     String?
  password                 String?
  resetPasswordToken       String?   @unique
  resetPasswordTokenExpiry DateTime?
  email                    String    @unique
  emailVerified            Boolean?  @default(false)
  emailVerificationToken   String?   @unique
  phone                    String?
  image                    String?
  isSubscribed             Boolean?  @default(false)
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  accounts                 Account[]
  sessions                 Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
